prop.test(c(1591, 1405), c(7579, 7451), alternative = c("two.sided"), conf.level = 0.95)
prop.test?
;
?prop.test
prop.test(c(36,34), c(1591, 1405), alternative = c("two.sided"), conf.level = 0.95)
prop.test(c(36,34), c(1591, 1405), alternative = c("one.sided"), conf.level = 0.95)
prop.test(c(36,34), c(1591, 1405), alternative = c("greater"), conf.level = 0.95)
prop.test(c(36,34), c(1591, 1405), alternative = c("one.sided"), conf.level = 0.90)
prop.test(c(36,34), c(1591, 1405), alternative = c("two.sided"), conf.level = 0.90)
prop.test(c(1405,1591), c(7451, 7579), alternative = c("two.sided"), conf.level = 0.95)
prop.test(c(1405,1591), c(7451, 7579), alternative = c("two.sided"), conf.level = 0.95)Sample Conversions	A - cvr
1591	20.99%
Sample Conversions	A - cvr
1591	20.99%
prop.test(c(1282, 1177), c(7579, 7451), alternative = c("two.sided"), conf.level = 0.95)
prop.test(c(1245, 1127), c(7579, 7451), alternative = c("two.sided"), conf.level = 0.95)
prop.test(c(783, 743), c(7579, 7451), alternative = c("two.sided"), conf.level = 0.95)
prop.test(c(302, 290), c(7579, 7451), alternative = c("two.sided"), conf.level = 0.95)
prop.test(c(36, 34), c(7579, 7451), alternative = c("two.sided"), conf.level = 0.95)
prop.test(c(297, 284), c(7579, 7451), alternative = c("two.sided"), conf.level = 0.95)
prop.test(c(36, 34), c(7579, 7451), alternative = c("two.sided"), conf.level = 0.95)
t.test(c(36, 34), c(7579, 7451), alternative = c("two.sided"), conf.level = 0.95)
prop.test(c(36, 34), c(7579, 7451), alternative = c("two.sided"), conf.level = 0.95)
t.test(c(1405,1591), c(7451, 7579), alternative = c("two.sided"), conf.level = 0.95)
prop.test(c(1405,1591), c(7451, 7579), alternative = c("two.sided"), conf.level = 0.95)
prop.test(c(1405,1591), c(7451, 7579), alternative = c("two.sided"), conf.level = 0.95)
t.test(c(1405,1591), c(7451, 7579), var.equal = True, alternative = c("two.sided"), conf.level = 0.95)
t.test(c(1405,1591), c(7451, 7579), var.equal = TRUE, alternative = c("two.sided"), conf.level = 0.95)
?t.test
t.test(c(1405,1591), c(7451, 7579), var.equal = TRUE, alternative = c("two.sided"), conf.level = 0.95)
install.packages('knitr', dependencies = T)
library(knitr)
library(knitr)
summary(mtcars)
?subset
efficient <- subset(mtcars, mpg == 23)
length(efficient)
subset(mtcars, mpg > 30 & hp > 100)
subset(mtcars, mpg < 14 | disp > 390)
subset(mtcars, qsec <= 16.90)
lightCars <- subset(mtcars, wt < 2)
length(lightCars)
mtcars$year <- 1974
View(mtcars)
```{r}
mtcars <- subset(mtcars, select = -year)
mtcars$year <- c(1973, 1974)
View(mtcars)
mtcars <- subset(mtcars, select = -year)
mtcars$wt
mtcars$wt
cond <- mtcars$wt < 3
cond
mtcars$weight_class <- ifelse(cond, 'light', 'average')
mtcars$weight_class
cond <- mtcars$wt > 3.5
mtcars$weight_class <- ifelse(cond, 'heavy', mtcars$weight_class)
mtcars$weight_class
rm(cond)
rm(efficient)
answerudacity <- subset(mtcars, mpg >= 30 | hp <= 60)
View(answerudacity)
View(answerudacity)
reddit <- read.csv('/reddit.csv')
reddit <- read.csv('reddit.csv')
getwd()
setwd('~/git/R-EDA/lesson2')
getwd()
reddit <- read.csv('reddit.csv')
View(answerudacity)
View(reddit)
View(reddit)
view(reddit)
View(reddit)
table(reddit$employment.status)
summary(reddit)
str(reddit)
levels(reddit$age.range
levels(reddit$age.range)
levels(reddit$age.range)
gplot(data = reddit, x = age.range)
library(ggplot2)
gplot(data = reddit, x = age.range)
library(ggplot2)
ggplot2(data = reddit, x = age.range)
ggplot(data = reddit, x = age.range)
install.packages('ggplot2', dependencies = T)
install.packages("ggplot2", dependencies = T)
install.packages("ggplot2", dependencies = T)
install.packages("ggplot2", dependencies = T)
library(ggplot2)
ggplot(data = reddit, x = age.range)
