facet_wrap(~gender)
ggplot(aes(x = friend_count), data = subset(pf, !is.na(gender)) +
geom_histogram() +
scale_x_log10() +
facet_wrap(~gender)
ggplot(aes(x = friend_count), data = subset(pf, !is.na(gender))) +
```{r Frequency Polygons}
ggplot(aes(x = friend_count), data = subset(pf, !is.na(gender))) +
geom_histogram() +
scale_x_log10() +
facet_wrap(~gender)
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 500, 50)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 500, 50)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(500, 1000), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(200, 400), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 20)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 100)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = www_likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 100)) +
xlab('Likes on the web') +
ylab('Percentage of users with that like count')
ggplot(aes(x = www_likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 100), breaks = seq(0, 1000, 100)) +
xlab('Likes on the web') +
ylab('Percentage of users with that like count')
ggplot(aes(x = www_likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 100)) +
xlab('Likes on the web') +
ylab('Percentage of users with that like count')
ggplot(aes(x = www_likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 1)) +
xlab('Likes on the web') +
ylab('Percentage of users with that like count')
ggplot(aes(x = www_likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 10)) +
xlab('Likes on the web') +
ylab('Percentage of users with that like count')
ggplot(aes(x = www_likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 500), breaks = seq(0, 1000, 10)) +
xlab('Likes on the web') +
ylab('Percentage of users with that like count')
ggplot(aes(x = www_likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 200), breaks = seq(0, 1000, 10)) +
xlab('Likes on the web') +
ylab('Percentage of users with that like count')
summary(pf$www_likes)
ggplot(aes(x = www_likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(1, 100), breaks = seq(0, 1000, 10)) +
xlab('Likes on the web') +
ylab('Percentage of users with that like count')
ggplot(aes(x = www_likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(1, 100), breaks = seq(1, 100, 1)) +
xlab('Likes on the web') +
ylab('Percentage of users with that like count')
ggplot(aes(x = www_likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(1, 100), breaks = seq(1, 100, 5)) +
xlab('Likes on the web') +
ylab('Percentage of users with that like count')
ggplot(aes(x = www_likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(1, 150), breaks = seq(1, 100, 5)) +
xlab('Likes on the web') +
ylab('Percentage of users with that like count')
ggplot(aes(x = www_likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(1, 150), breaks = seq(1, 150, 5)) +
xlab('Likes on the web') +
ylab('Percentage of users with that like count')
scale_x_continuous(limits = c(1, 150), breaks = seq(1, 150, 5)) +
ggplot(aes(x = www_likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(1, 150), breaks = seq(1, 150, 5)) +
xlab('Likes on the web') +
ylab('Percentage of users with that like count') +
scale_x_log10()
)
ggplot(aes(x = www_likes, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous() +
xlab('Likes on the web') +
ylab('Percentage of users with that like count') +
scale_x_log10()
ggplot(aes(x = www_likes, data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(1, 150), breaks = seq(1, 150, 5)) +
xlab('Likes on the web') +
ylab('Percentage of users with that like count')
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 100)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count') +
scale_x_log10()
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 100)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count') +
scale_x_log10()
ggplot(aes(x = friend_count, data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 100)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count') +
scale_x_log10()
ggplot(aes(x = friend_count, data = subset(pf, !is.na(gender))) +
ggplot(aes(x = friend_count, data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 100)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count') +
scale_x_log10()
ggplot(aes(x = www_likes, data = subset(pf, !is.na(gender))) +
ggplot(aes(x = www_likes, data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(1, 150), breaks = seq(1, 150, 5)) +
xlab('Likes on the web') +
ylab('Percentage of users with that like count')
ggplot(aes(x = www_likes, data = subset(pf, !is.na(gender)))) +
ggplot(x = www_likes, data = subset(pf, !is.na(gender)) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous() +
xlab('Likes on the web') +
ylab('Percentage of users with that like count')
aes(
ggplot(aes(x = www_likes), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous() +
xlab('Likes on the web') +
ylab('Percentage of users with that like count')
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = www_likes), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_log10()
summary(pf$www_likes)
sum(pf$www_likes)
sum(pf$www_likes, group = gender)
?sum
?aggregate
aggregate(x = www_likes, by = gender, data = subset(pf, !is.na(gender)), FUN=sum)
aggregate(x = pf$www_likes, by = pf$gender, data = subset(pf, !is.na(gender)), FUN=sum)
by(pf$www_likes, pf$gender, sum)
ggplot(aes(x = www_likes), data = subset(pf, !is.na(gender))) +
geom_histogram(aes(color = gender))
ggplot(aes(x = www_likes), data = subset(pf, !is.na(gender))) +
geom_boxplot(aes(color = gender))
ggplot(aes(x = www_likes), data = subset(pf, !is.na(gender))) +
geom_boxplot())
ggplot(aes(x = www_likes), data = subset(pf, !is.na(gender))) +
geom_boxplot()
ggplot(aes(x = www_likes), data = subset(pf, !is.na(gender))) +
?geom_boxplot()
?geom_boxplot
ggplot(aes(x = www_likes), data = subset(pf, !is.na(gender))) +
geom_boxplot()
qplot(x = gender, y = friend_count, data = subset(pf, !is.na(gender), geom='boxplot'))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom='boxplot')
?qplot
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom='boxplot',
ylim=c(0,1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom='boxplot') +
coord_cartesian(ylim=c(0,1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom='boxplot') +
coord_cartesian(ylim=c(0,250))
by(pf$friend_count, pf$gender, summary)
by(pf$friendships_initiated, pf$gender, summary)
summary(pf$mobile_likes > 0)
pf(mobile_check_in <- ifelse(pf$mobile_likes > 0, 1, 0))
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0, 1, 0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf$mobile_check_in)
pf$mobile_check_in <- NA
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0, 1, 0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf$mobile_check_in)
length(pf$mobile_check_in)
length(pf$mobile_check_in = 1)/length(pf$mobile_check_in)
sum(pf$mobile_check_in = 1)/length(pf$mobile_check_in)
sum(pf$mobile_check_in == 1)/length(pf$mobile_check_in)
library(ggplot2)
data("diamonds")
data(diamonds)
summary(diamonds)
diamonds$color
length(diamonds)
View(pf)
?diamonds
ggplot(data = diamonds, aes(x = price)) +
geom_histogram(binwidth = 1) +
scale_x_continuous()
ggplot(data = diamonds, aes(x = price)) +
geom_histogram(binwidth = 1) +
scale_x_continuous()
ggplot(data = diamonds, aes(x = price)) +
geom_histogram(binwidth = 100) +
scale_x_continuous()
ggplot(data = diamonds, aes(x = price)) +
geom_histogram(binwidth = 200) +
scale_x_continuous()
summary(diamonds$price)
length(diamonds$price < 500)
length(diamonds$price < 250)
length(diamonds$price >= 15000)
count.fields(diamonds$price < 500)
(diamonds$price,  < 500)
length(diamonds$price,  < 500)
length(diamonds$price, price < 500)
table(diamonds$price, diamonds$price < 500)
summarise(count = n(),count1 = sum(price < 500))
summary(count = n(),count1 = sum(price < 500))
summary(sum(diamonds$price < 500))
sum(diamonds$price < 500)
sum(diamonds$price < 250)
sum(diamonds$price >= 15000)
?scale_x_continuous
ggplot(data = diamonds, aes(x = price)) +
geom_histogram(binwidth = 200) +
scale_x_continuous() +
coord_cartesian(xlim=c(0,1000))
ggplot(data = diamonds, aes(x = price)) +
geom_histogram(binwidth = 200) +
scale_x_continuous() +
coord_cartesian(xlim=c(0,5000))
ggplot(data = diamonds, aes(x = price)) +
geom_histogram(binwidth = 100) +
scale_x_continuous() +
coord_cartesian(xlim=c(0,5000))
?geom_histogram
ggplot(data = diamonds, aes(x = price)) +
geom_histogram(binwidth = 100, color = "red") +
scale_x_continuous() +
coord_cartesian(xlim=c(0,5000))
?subset
ggplot(data = subset(diamonds , aes(x = price)) +
geom_histogram(binwidth = 200) +
scale_x_continuous() +
facet_grid(~color)
?subset
ggplot(data = subset(diamonds , aes(x = price)) +
geom_histogram(binwidth = 200) +
scale_x_continuous() +
facet_grid(~color)
ggplot(data = diamonds, aes(x = price)) +
geom_histogram(binwidth = 200) +
scale_x_continuous() +
facet_grid(~color)
ggplot(data = diamonds, aes(x = price)) +
geom_histogram(binwidth = 200) +
scale_x_continuous() +
facet_grid(~color) +
scale_x_log10()
ggplot(data = diamonds, aes(x = price)) +
geom_histogram(binwidth = 200) +
scale_x_continuous() +
facet_grid(~color) +
scale_y_log10()
?by
by(diamonds$price, FUN = max())
by(diamonds$price, INDICES = diamonds$cut, FUN = max())
by(diamonds$price, INDICES = diamonds$cut, FUN = max
by(diamonds$price, INDICES = diamonds$cut, FUN = max)
aggregate(Value ~ price, data = diamonds, max)
aggregate(price ~ cut, data = df, max)
aggregate(price ~ cut, data = diamonds, max)
aggregate(price ~ cut, data = diamonds, min)
aggregate(price ~ cut, data = diamonds, median)
max(aggregate(price ~ cut, data = diamonds, median))
aggregate(price ~ cut, data = diamonds, median)
aggregate(price ~ cut, data = diamonds, median)
qplot(x = price, data = diamonds) + facet_wrap(~cut)
qplot(x = price, data = diamonds) + facet_wrap(~cut, scales = "free")
qplot(x = price/carat, data = diamonds) + facet_wrap(~cut, scales = "free")
qplot(x = price/carat, data = diamonds) + facet_wrap(~cut)
IQR(diamonds$color)
?IQR
IQR(diamonds$color = D)
IQR(subset(diamonds$color, color = D)
IQR(subset(diamonds$color, color = D))
IQR(subset(diamonds$color, color = D))
summary(diamonds$price)
summary(diamonds$price)  + facet_wrap(~cut)
describe.by(diamonds$price, group = diamonds$color)
by(diamonds$price, group = diamonds$color)
by?
b?by
?by
by(diamonds$price, diamonds$color, summary)
QR(subset(diamonds, price <1000)$price)
IQR(subset(diamonds, price <1000)$price)
IQR(subset(diamonds, color = 'D')$price)
IQR(subset(diamonds, color = 'J')$price)
IQR(subset(diamonds, color = 'J')$price)
IQR(subset(diamonds, color = 'D')$price)
?diamonds
IQR(subset(diamonds, color = 'J')$price)
IQR(subset(diamonds, color = 'D')$price)
IQR(subset(diamonds, color = 'E')$price)
IQR(subset(diamonds, color = 'D')$price)
IQR(subset(diamonds, price <1000)$price)
IQR(subset(diamonds, color == 'J')$price)
IQR(subset(diamonds, color == 'D')$price)
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(aes(color = diamonds$color), binwidth=10)
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(aes(color = diamonds$color), binwidth=0.1)
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(aes(color = diamonds$color), binwidth=0.1) +
coord_cartesian(ylim=c(0,.5))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(aes(color = diamonds$color), binwidth=0.1) +
coord_cartesian(xlim=c(0,0.5))
?table
table(diamonds$carat)
getwd()
setwd("/Users/lt/Git/R-EDA")
pf <- read.csv("/lesson3/pseudo_facebook.tsv)
pf <- read.csv("/lesson3/pseudo_facebook.tsv)
library(ggplot2)
pf <- read.csv("/lesson3/pseudo_facebook.tsv)
pf <- read.csv("lesson3/pseudo_facebook.tsv)
pf <- read.csv('lesson3/pseudo_facebook.tsv', sep='\t')
pf <- read.csv('lesson3/pseudo_facebook.tsv', sep = '\t')
pf <- read.csv('/lesson3/pseudo_facebook.tsv', sep = '\t')
getwd()
pf <- read.csv('R-EDA/lesson3/pseudo_facebook.tsv', sep = '\t')
pf <- read.csv('/Users/lt/Git/R-EDA/lesson3/pseudo_facebook.tsv', sep = '\t')
qplot(x = age, y = friend_count, data = pf)
ggplot(aes(x = age, y = friend_count), data = pf) + geom_point()
summary(pf$age)
ggplot(aes(x = age, y = friend_count), data = pf) + geom_point() +  xlim(13,90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/20) +
xlim(13,90) +
summary(pf$age)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/20) +
xlim(13,90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13,90)
?coord_trans
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13,90) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13,90) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13,90)
coord_trans(x = "sqrt", y = "sqrt")
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13,90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13,90)
coord_trans(x = "sqrt", y = "sqrt")
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13,90) +
coord_trans(x = "sqrt")
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13,90)
+
coord_trans(x = "sqrt")
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13,90) +
coord_trans(x = "sqrt")
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13,90) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13,90) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13,90) +
coord_trans(x = "age", y = "sqrt")
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13,90) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13,90) +
coord_trans(x = "sqrt", y = "sqrt")
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13,90) +
coord_trans(x = T, y = "sqrt")
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13,90) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13,90) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friend_count), data = subset(pf, friendcount != 0) +
geom_jitter(alpha = 1/20) +
xlim(13,90) +
coord_trans(y = "sqrt")
summary(pf$age)
ggplot(aes(x = age, y = friend_count), data = subset(pf, friendcount != 0)) +
geom_jitter(alpha = 1/20) +
xlim(13,90) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friend_count), data = subset(pf, friend_count != 0)) +
geom_jitter(alpha = 1/20) +
xlim(13,90) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friend_count), data = subset(pf, friend_count + 1 )) +
geom_jitter(alpha = 1/20) +
xlim(13,90) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friend_count), data = subset(pf, friend_count + 1)) +
geom_jitter(alpha = 1/20) +
xlim(13,90) +
coord_trans(y = "sqrt")
!= 0
ggplot(aes(x = age, y = friend_count), data = subset(pf, friend_count != 0)) +
geom_jitter(alpha = 1/20) +
xlim(13,90) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friend_count), data = pf$friend_count + 1) +
geom_jitter(alpha = 1/20) +
xlim(13,90) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friend_count), data = subset(pf, friend_count != 0)) +
geom_jitter(alpha = 1/20) +
xlim(13,90) +
coord_trans(y = "sqrt")
pf$friend_count_edited <- pf$friend_count + 1
ggplot(aes(x = age, y = friend_count_edited), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13,90) +
coord_trans(y = "sqrt")
```{r ggplot Syntax}
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13,90)
ggplot(aes(x = age, y = friend_count_edited), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13,90) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friend_count_edited), data = pf) +
geom_point(alpha = 1/20) +
xlim(13,90) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/20) +
xlim(13,90) +
coord_trans(y = "sqrt")
